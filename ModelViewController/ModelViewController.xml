<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ModelViewController</name>
    </assembly>
    <members>
        <member name="T:ModelViewController.Controllers.AwardsController">
            <summary>
            Awards Controller.
            </summary>
        </member>
        <member name="M:ModelViewController.Controllers.AwardsController.#ctor(ModelViewController.Services.Abstract.IRepository{ModelViewController.DAL.Entities.Award})">
            <summary>
            Initializes a new instance of the <see cref="T:ModelViewController.Controllers.AwardsController"/> class.
            </summary>
            <param name="repository">Repository.</param>
        </member>
        <member name="M:ModelViewController.Controllers.AwardsController.Index">
            <summary>
            Index.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.AwardsController.Details(System.Nullable{System.Guid})">
            <summary>
            Details.
            </summary>
            <param name="id">Award Id.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.AwardsController.Create">
            <summary>
            .
            </summary>
            <returns>Create View.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.AwardsController.Create(ModelViewController.Models.AwardModel)">
            <summary>
            Create.
            </summary>
            <param name="model">AwardModel.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.AwardsController.Edit(System.Nullable{System.Guid})">
            <summary>
            .
            </summary>
            <param name="id">Award Id.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.AwardsController.Edit(System.Guid,ModelViewController.DAL.Entities.Award,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            .
            </summary>
            <param name="id">Award Id.</param>
            <param name="award">Award.</param>
            <param name="image">Image.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.AwardsController.Delete(System.Nullable{System.Guid})">
            <summary>
            .
            </summary>
            <param name="id">Award Id.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.AwardsController.DeleteConfirmed(System.Guid)">
            <summary>
            .
            </summary>
            <param name="id">Award Id.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="T:ModelViewController.Controllers.HomeController">
            <summary>
            .
            </summary>
        </member>
        <member name="M:ModelViewController.Controllers.HomeController.Index">
            <summary>
            .
            </summary>
            <returns>View.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.HomeController.Privacy">
            <summary>
            .
            </summary>
            <returns>View.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.HomeController.Error">
            <summary>
            .
            </summary>
            <returns>Error View.</returns>
        </member>
        <member name="T:ModelViewController.Controllers.UsersController">
            <summary>
            Users Controller.
            </summary>
        </member>
        <member name="M:ModelViewController.Controllers.UsersController.#ctor(ModelViewController.Services.Abstract.IRepository{ModelViewController.DAL.Entities.User},ModelViewController.Services.Abstract.IRepository{ModelViewController.DAL.Entities.Award})">
            <summary>
            Initializes a new instance of the <see cref="T:ModelViewController.Controllers.UsersController"/> class.
            </summary>
            <param name="repository">User repository.</param>
            <param name="awardRepository">Award repository.</param>
        </member>
        <member name="M:ModelViewController.Controllers.UsersController.Index">
            <summary>
            .
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.UsersController.AwardDetails(ModelViewController.DAL.Entities.Award)">
            <summary>
            .
            </summary>
            <returns>Partial view.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.UsersController.Details(System.Nullable{System.Guid})">
            <summary>
            .
            </summary>
            <param name="id">User Id.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.UsersController.Create">
            <summary>
            .
            </summary>
            <returns>Create View.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.UsersController.Create(ModelViewController.Models.UserModel)">
            <summary>
            .
            </summary>
            <param name="model">UserModel.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.UsersController.Edit(System.Nullable{System.Guid})">
            <summary>
            .
            </summary>
            <param name="id">User Id.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.UsersController.Edit(System.Guid,ModelViewController.Models.UserModel)">
            <summary>
            .
            </summary>
            <param name="id">User Id.</param>
            <param name="model">Model.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.UsersController.Delete(System.Nullable{System.Guid})">
            <summary>
            .
            </summary>
            <param name="id">User Id.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.UsersController.DeleteConfirmed(System.Guid)">
            <summary>
            .
            </summary>
            <param name="id">User Id.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:ModelViewController.Controllers.UsersController.Download">
            <summary>
            .
            </summary>
            <returns>Physical File.</returns>
        </member>
        <member name="T:ModelViewController.Models.AwardModel">
            <summary>
            AwardViewModel.
            </summary>
        </member>
        <member name="P:ModelViewController.Models.AwardModel.Id">
            <summary>
            Gets or sets id.
            </summary>
        </member>
        <member name="P:ModelViewController.Models.AwardModel.Title">
            <summary>
            Gets or sets title.
            </summary>
        </member>
        <member name="P:ModelViewController.Models.AwardModel.Description">
            <summary>
            Gets or sets Description.
            </summary>
        </member>
        <member name="P:ModelViewController.Models.AwardModel.Image">
            <summary>
            Gets or sets Image.
            </summary>
        </member>
        <member name="T:ModelViewController.Models.ErrorViewModel">
            <summary>
            ErrorViewModel.
            </summary>
        </member>
        <member name="P:ModelViewController.Models.ErrorViewModel.RequestId">
            <summary>
            Gets or sets .
            </summary>
        </member>
        <member name="P:ModelViewController.Models.ErrorViewModel.ShowRequestId">
            <summary>
            Gets a value indicating whether .
            </summary>
        </member>
        <member name="T:ModelViewController.Models.UserModel">
            <summary>
            UserViewModel.
            </summary>
        </member>
        <member name="P:ModelViewController.Models.UserModel.Id">
            <summary>
            Gets or sets Id.
            </summary>
        </member>
        <member name="P:ModelViewController.Models.UserModel.Name">
            <summary>
            Gets or sets Name.
            </summary>
        </member>
        <member name="P:ModelViewController.Models.UserModel.Birthdate">
            <summary>
            Gets or sets Birthdate.
            </summary>
        </member>
        <member name="P:ModelViewController.Models.UserModel.Photo">
            <summary>
            Gets or sets Photo.
            </summary>
        </member>
        <member name="P:ModelViewController.Models.UserModel.Awards">
            <summary>
            Gets or sets Awards.
            </summary>
        </member>
        <member name="T:ModelViewController.Program">
            <summary>
            Program class.
            </summary>
        </member>
        <member name="M:ModelViewController.Program.Main(System.String[])">
            <summary>
            Main method.
            </summary>
            <param name="args">args.</param>
        </member>
        <member name="M:ModelViewController.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            .
            </summary>
            <param name="args">args.</param>
            <returns>Startup.</returns>
        </member>
        <member name="T:ModelViewController.Startup">
            <summary>
            Startup class.
            </summary>
        </member>
        <member name="M:ModelViewController.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:ModelViewController.Startup"/> class.
            </summary>
            <param name="configuration">configuration.</param>
        </member>
        <member name="P:ModelViewController.Startup.Configuration">
            <summary>
            Gets Configuration.
            </summary>
        </member>
        <member name="M:ModelViewController.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureServices method.
            </summary>
            <param name="services">services.</param>
        </member>
        <member name="M:ModelViewController.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configure.
            </summary>
            <param name="app">IApplicationBuilder.</param>
            <param name="env">IHostingEnvironment.</param>
        </member>
    </members>
</doc>
