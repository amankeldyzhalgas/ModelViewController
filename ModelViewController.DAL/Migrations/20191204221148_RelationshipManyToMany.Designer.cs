// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelViewController.DAL;

namespace ModelViewController.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20191204221148_RelationshipManyToMany")]
    partial class RelationshipManyToMany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ModelViewController.DAL.Entities.Award", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Awards");
                });

            modelBuilder.Entity("ModelViewController.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthdate");

                    b.Property<string>("Name");

                    b.Property<string>("Photo");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ModelViewController.DAL.Entities.UserAward", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("AwardId");

                    b.HasKey("UserId", "AwardId");

                    b.HasIndex("AwardId");

                    b.ToTable("UserAward");
                });

            modelBuilder.Entity("ModelViewController.DAL.Entities.UserAward", b =>
                {
                    b.HasOne("ModelViewController.DAL.Entities.Award", "Award")
                        .WithMany("UserAwards")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ModelViewController.DAL.Entities.User", "User")
                        .WithMany("UserAwards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
